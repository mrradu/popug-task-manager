networks:
  ates:
    driver: bridge

version: '3.8'

services:
  auth:
    build: ./auth
    container_name: ates_auth
    command: >
      bash -c "uvicorn auth:app --reload --host 0.0.0.0 --port 8881"
    volumes:
      - ./:/auth
    networks:
      - ates
    ports:
      - 8881:8881
    environment:
      - DEBUG=1
  frontoffice:
    build: ./frontoffice
    container_name: ates_fo
    command: >
      bash -c "uvicorn frontoffice:app --reload --host 0.0.0.0 --port 8882"
    volumes:
      - ./:/frontoffice
    networks:
      - ates
    ports:
      - 8882:8882
    environment:
      - DEBUG=1
  inventory:
    build: ./inventory
    container_name: ates_inventory
    command: >
      bash -c "uvicorn inventory:app --reload --host 0.0.0.0 --port 8883"
    volumes:
      - ./:/inventory
    networks:
      - ates
    ports:
      - 8883:8883
    environment:
      - DEBUG=1
  inventory-consumer:
    build: ./inventory
    container_name: ates_inventory_consumer
    command: python -m inventory.consumer
    volumes:
      - ./:/inventory
    networks:
      - ates
    environment:
      - BROKER_HOST=broker
      - DEBUG=1
      - PYTHONASYNCIODEBUG=1
      - PYTHONUNBUFFERED=1
    depends_on:
      - broker
      - zookeeper
    stop_signal: SIGHUP
  zookeeper:

    image: wurstmeister/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - ates
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: wurstmeister/kafka
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    networks:
      - ates
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
